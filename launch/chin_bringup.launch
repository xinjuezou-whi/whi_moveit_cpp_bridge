<?xml version="1.0"?>
<launch>
  <!-- argument -->
  <arg name="arm" default="chin"/>
  <arg name="arm_model" default="crb7"/>
  <arg name="controller" default="fake"/>
  <!-- urdf and srdf file -->
  <arg name="moveit_config_path" default="$(eval '$(find ' + arg('arm') + '_' + arg('arm_model') + '_moveit_config)')"/>
  <arg name="urdf_file" default="$(eval '$(find ' + arg('arm') + '_' + arg('arm_model') + '_description)/urdf/' + arg('arm') + '_' + arg('arm_model') + '.urdf.xacro')"/>
  <arg name="srdf_file" default="$(arg moveit_config_path)config/$(arg arm)_$(arg arm_model).srdf"/>
  <arg name="fixed_frame" default="world"/>
  <arg name="base_frame" default="chin_link_0"/>

  <!-- kinematics -->
  <rosparam command="load" file="$(arg moveit_config_path)config/kinematics.yaml"/>

  <!-- Planning Pipeline -->
  <include ns="whi_moveit_cpp_bridge/ompl" file="$(arg moveit_config_path)launch/ompl_planning_pipeline.launch.xml"/>

  <!-- Trajectory execution  -->
  <include ns="whi_moveit_cpp_bridge" file="$(arg moveit_config_path)launch/trajectory_execution.launch.xml">
    <arg name="moveit_controller_manager" value="$(arg controller)"/>
  </include>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(arg moveit_config_path)launch/planning_context.launch">
    <arg name="urdf_file" value="$(arg urdf_file)"/>
    <arg name="srdf_file" value="$(arg srdf_file)"/>
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 $(arg fixed_frame) $(arg base_frame)" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 chin_link_tcp camera" />

  <!-- Start robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

</launch>
